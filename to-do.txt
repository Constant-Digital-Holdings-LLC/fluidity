
Notes on packet identification:
------------------------------
Add seq and id (unique) fields to FluidityPackets (both populated by server)



The UI class will have two methods:
----------------------------------
addPresent(fp: FluidityPacket)
addHistorical(fpArr: FluidityPacket[])

The UI class will then know to prepend history data, so it’s inserted in the DOM before current data.



Notes on NetWorking, from client pov:
------------------------------------
The clinet should establish an SSE connection and keep the firstPacket is receives. It should immediately start sending packets to ui.addPresent(fp)

The client should then remove any packets matching, or after (using seq), the firstPacket. This way there are no dupes in history and present data. Once dupes
are removed, slient should call addHistorical(fpArr).

Notes on client-side filtering and indexing:
-------------------------------------------
(Within UI Class)

sitesClicked Array
collectorsClicked Array

siteIndex Map (returns a Set of all packet IDs in that site)
collectorIndex Map (returns a Set of all packet IDs with that collector)

Each new incoming data item is added to both indexes 

“Clicked Arrays” are added to, removed from as filter links are clicked 

OnSets:

An OnSet is immediately generated every time a new data item arrives OR a filter is clicked 

To generate the OnSet, get all IDs (Set object) from the siteIndex for the sites clicked. Next get all IDs (Set Object) from the collectorIndex for the collectors clicked. The OnSet is the merger of the two Sets.

The aforementioned will be used to quickly determine if new or existing data times (html) should have their visibility set to none or not.

